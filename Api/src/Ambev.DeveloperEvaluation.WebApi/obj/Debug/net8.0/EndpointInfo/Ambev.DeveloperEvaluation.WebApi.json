{
  "openapi": "3.0.1",
  "info": {
    "title": "Ambev.DeveloperEvaluation.WebApi",
    "version": "1.0"
  },
  "paths": {
    "/api/Auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authenticates a user with their credentials",
        "requestBody": {
          "description": "The authentication request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateUserResponseApiResponseWithData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateUserResponseApiResponseWithData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateUserResponseApiResponseWithData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sales": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Retrieves the list of all sales.",
        "responses": {
          "200": {
            "description": "Returns the list of sales."
          }
        }
      },
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Creates a new sale.",
        "requestBody": {
          "description": "Sale creation data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/sales/{id}": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Retrieves the details of a specific sale by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the sale.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sales"
        ],
        "summary": "Updates an existing sale.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the sale to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Updated sale data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSaleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSaleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSaleRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sales"
        ],
        "summary": "Deletes a sale.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the sale to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/sales/{saleId}/items/{itemId}": {
      "delete": {
        "tags": [
          "Sales"
        ],
        "summary": "Cancels a specific item within a sale.",
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "description": "ID of the sale.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "ID of the item to cancel.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Creates a new user",
        "requestBody": {
          "description": "The user creation request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponseApiResponseWithData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponseApiResponseWithData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponseApiResponseWithData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieves a user by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the user",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponseApiResponseWithData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponseApiResponseWithData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponseApiResponseWithData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Deletes a user by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the user to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationErrorDetail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticateUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Gets or sets the user's email address for authentication.\r\nMust be a valid email format.",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "Gets or sets the user's password for authentication.\r\nMust match the stored password after hashing.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the authentication request model for user login."
      },
      "AuthenticateUserResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Gets or sets the JWT token for authenticated user",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Gets or sets the user's email address",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or sets the user's full name",
            "nullable": true
          },
          "role": {
            "type": "string",
            "description": "Gets or sets the user's role in the system",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the response returned after user authentication"
      },
      "AuthenticateUserResponseApiResponseWithData": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationErrorDetail"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/AuthenticateUserResponse"
          }
        },
        "additionalProperties": false
      },
      "CreateSaleItemRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreateSaleRequest": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "branchId": {
            "type": "string",
            "format": "uuid"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSaleItemRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Gets or sets the username. Must be unique and contain only valid characters.",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "Gets or sets the password. Must meet security requirements.",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Gets or sets the phone number in format (XX) XXXXX-XXXX.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Gets or sets the email address. Must be a valid email format.",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/UserStatus"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          }
        },
        "additionalProperties": false,
        "description": "Represents a request to create a new user in the system."
      },
      "CreateUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the created user",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The user's full name",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The user's email address",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The user's phone number",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatus"
          }
        },
        "additionalProperties": false,
        "description": "API response model for CreateUser operation"
      },
      "CreateUserResponseApiResponseWithData": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationErrorDetail"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/CreateUserResponse"
          }
        },
        "additionalProperties": false
      },
      "GetUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the user",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The user's full name",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The user's email address",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The user's phone number",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "status": {
            "$ref": "#/components/schemas/UserStatus"
          }
        },
        "additionalProperties": false,
        "description": "API response model for GetUser operation"
      },
      "GetUserResponseApiResponseWithData": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationErrorDetail"
            },
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/GetUserResponse"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "UpdateSaleItemRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UpdateSaleRequest": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "branchId": {
            "type": "string",
            "format": "uuid"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateSaleItemRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRole": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "UserStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ValidationErrorDetail": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}